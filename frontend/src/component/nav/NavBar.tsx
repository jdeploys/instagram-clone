import React, { useEffect, useState } from 'react';
import { useHistory, useLocation } from 'react-router-dom';
import { RoutePath } from '@/component/router/@types';

const NavBar = () => {
  const history = useHistory();
  const location = useLocation();

  const isMatch = (targetPath: RoutePath) => location.pathname.startsWith(targetPath);

  return (
    <div className="h-14 w-full">
      <div className="fixed bottom-0 w-full h-14 z-10 bg-white flex flex-row items-center border-t">
        <div
          className="flex-1 flex flex-col items-center"
          onClick={() => {
            if (location.pathname === RoutePath.ArticleList) {
              return;
            }

            history.push(RoutePath.ArticleList);
          }}
        >
          <div>
            <svg
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <g clipPath="url(#clip0_403_3283)">
                <path
                  d="M11 12C11.2652 12 11.5196 12.1054 11.7071 12.2929C11.8946 12.4804 12 12.7348 12 13C12 13.2652 11.8946 13.5196 11.7071 13.7071C11.5196 13.8946 11.2652 14 11 14H8C7.73478 14 7.48043 13.8946 7.29289 13.7071C7.10536 13.5196 7 13.2652 7 13C7 12.7348 7.10536 12.4804 7.29289 12.2929C7.48043 12.1054 7.73478 12 8 12H11ZM17 9C17 8.73478 16.8946 8.48043 16.7071 8.29289C16.5196 8.10536 16.2652 8 16 8H8C7.73478 8 7.48043 8.10536 7.29289 8.29289C7.10536 8.48043 7 8.73478 7 9C7 9.26522 7.10536 9.51957 7.29289 9.70711C7.48043 9.89464 7.73478 10 8 10H16C16.2652 10 16.5196 9.89464 16.7071 9.70711C16.8946 9.51957 17 9.26522 17 9ZM8 6H16C16.2652 6 16.5196 5.89464 16.7071 5.70711C16.8946 5.51957 17 5.26522 17 5C17 4.73478 16.8946 4.48043 16.7071 4.29289C16.5196 4.10536 16.2652 4 16 4H8C7.73478 4 7.48043 4.10536 7.29289 4.29289C7.10536 4.48043 7 4.73478 7 5C7 5.26522 7.10536 5.51957 7.29289 5.70711C7.48043 5.89464 7.73478 6 8 6ZM20 19.444V23.277C20.0001 23.4197 19.9578 23.5591 19.8786 23.6777C19.7994 23.7964 19.6868 23.8888 19.555 23.9434C19.4232 23.998 19.2781 24.0123 19.1382 23.9845C18.9983 23.9566 18.8698 23.8879 18.769 23.787L18 23.019L17.231 23.787C17.1302 23.8879 17.0017 23.9566 16.8618 23.9845C16.7219 24.0123 16.5768 23.998 16.445 23.9434C16.3132 23.8888 16.2006 23.7964 16.1214 23.6777C16.0422 23.5591 15.9999 23.4197 16 23.277V19.444C15.2373 19.0058 14.641 18.3277 14.3038 17.5154C13.9666 16.703 13.9076 15.8019 14.1358 14.9525C14.364 14.103 14.8667 13.3529 15.5656 12.8189C16.2646 12.2849 17.1204 11.997 18 12C18.338 12.0042 18.6741 12.0519 19 12.142V5C19 4.20435 18.6839 3.44129 18.1213 2.87868C17.5587 2.31607 16.7956 2 16 2H8C7.20435 2 6.44129 2.31607 5.87868 2.87868C5.31607 3.44129 5 4.20435 5 5V17C5 17.7956 5.31607 18.5587 5.87868 19.1213C6.44129 19.6839 7.20435 20 8 20H13C13.2652 20 13.5196 20.1054 13.7071 20.2929C13.8946 20.4804 14 20.7348 14 21C14 21.2652 13.8946 21.5196 13.7071 21.7071C13.5196 21.8946 13.2652 22 13 22H8C6.67441 21.9984 5.40356 21.4711 4.46622 20.5338C3.52888 19.5964 3.00159 18.3256 3 17V5C3.00159 3.67441 3.52888 2.40356 4.46622 1.46622C5.40356 0.528882 6.67441 0.00158786 8 0L16 0C17.3256 0.00158786 18.5964 0.528882 19.5338 1.46622C20.4711 2.40356 20.9984 3.67441 21 5V13.382C21.3917 13.8219 21.6801 14.3438 21.844 14.9096C22.0079 15.4753 22.0433 16.0706 21.9474 16.6518C21.8515 17.2329 21.6269 17.7853 21.2899 18.2684C20.953 18.7516 20.5122 19.1532 20 19.444ZM20 16C20 15.6044 19.8827 15.2178 19.6629 14.8889C19.4432 14.56 19.1308 14.3036 18.7654 14.1522C18.3999 14.0009 17.9978 13.9613 17.6098 14.0384C17.2219 14.1156 16.8655 14.3061 16.5858 14.5858C16.3061 14.8655 16.1156 15.2219 16.0384 15.6098C15.9613 15.9978 16.0009 16.3999 16.1522 16.7654C16.3036 17.1308 16.56 17.4432 16.8889 17.6629C17.2178 17.8827 17.6044 18 18 18C18.5304 18 19.0391 17.7893 19.4142 17.4142C19.7893 17.0391 20 16.5304 20 16Z"
                  fill={isMatch(RoutePath.ArticleList) ? '#3B82F6' : '#374957'}
                />
              </g>
              <defs>
                <clipPath id="clip0_403_3283">
                  <rect width="24" height="24" fill="white" />
                </clipPath>
              </defs>
            </svg>
          </div>
          <div
            className={`text-xs ${isMatch(RoutePath.ArticleList) ? 'text-blue-600' : ''}`}
          >
            게시글
          </div>
        </div>
        <div
          className="flex-1 flex flex-col items-center"
          onClick={() => {
            history.push(RoutePath.My);
          }}
        >
          <div>
            <svg
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <g clipPath="url(#clip0_403_3276)">
                <path
                  d="M19 0H5C3.67441 0.00158786 2.40356 0.528882 1.46622 1.46622C0.528882 2.40356 0.00158786 3.67441 0 5L0 19C0.00158786 20.3256 0.528882 21.5964 1.46622 22.5338C2.40356 23.4711 3.67441 23.9984 5 24H19C20.3256 23.9984 21.5964 23.4711 22.5338 22.5338C23.4711 21.5964 23.9984 20.3256 24 19V5C23.9984 3.67441 23.4711 2.40356 22.5338 1.46622C21.5964 0.528882 20.3256 0.00158786 19 0V0ZM7 22V21C7 19.6739 7.52678 18.4021 8.46447 17.4645C9.40215 16.5268 10.6739 16 12 16C13.3261 16 14.5979 16.5268 15.5355 17.4645C16.4732 18.4021 17 19.6739 17 21V22H7ZM22 19C22 19.7956 21.6839 20.5587 21.1213 21.1213C20.5587 21.6839 19.7956 22 19 22V21C19 19.1435 18.2625 17.363 16.9497 16.0503C15.637 14.7375 13.8565 14 12 14C10.1435 14 8.36301 14.7375 7.05025 16.0503C5.7375 17.363 5 19.1435 5 21V22C4.20435 22 3.44129 21.6839 2.87868 21.1213C2.31607 20.5587 2 19.7956 2 19V5C2 4.20435 2.31607 3.44129 2.87868 2.87868C3.44129 2.31607 4.20435 2 5 2H19C19.7956 2 20.5587 2.31607 21.1213 2.87868C21.6839 3.44129 22 4.20435 22 5V19Z"
                  fill={isMatch(RoutePath.My) ? '#3B82F6' : '#374957'}
                />
                <path
                  d="M12.0001 4.00031C11.209 4.00031 10.4356 4.2349 9.77781 4.67443C9.12002 5.11395 8.60733 5.73867 8.30458 6.46957C8.00182 7.20048 7.92261 8.00474 8.07695 8.78067C8.23129 9.55659 8.61226 10.2693 9.17167 10.8287C9.73108 11.3881 10.4438 11.7691 11.2197 11.9234C11.9957 12.0778 12.7999 11.9986 13.5308 11.6958C14.2617 11.3931 14.8864 10.8804 15.326 10.2226C15.7655 9.56479 16.0001 8.79143 16.0001 8.00031C16.0001 6.93944 15.5787 5.92202 14.8285 5.17188C14.0784 4.42173 13.061 4.00031 12.0001 4.00031ZM12.0001 10.0003C11.6045 10.0003 11.2179 9.88301 10.889 9.66324C10.5601 9.44348 10.3037 9.13112 10.1523 8.76567C10.001 8.40022 9.96135 7.99809 10.0385 7.61012C10.1157 7.22216 10.3062 6.8658 10.5859 6.58609C10.8656 6.30639 11.222 6.1159 11.6099 6.03873C11.9979 5.96156 12.4 6.00117 12.7655 6.15255C13.1309 6.30392 13.4433 6.56027 13.663 6.88916C13.8828 7.21806 14.0001 7.60474 14.0001 8.00031C14.0001 8.53074 13.7894 9.03945 13.4143 9.41452C13.0392 9.78959 12.5305 10.0003 12.0001 10.0003Z"
                  fill={isMatch(RoutePath.My) ? '#3B82F6' : '#374957'}
                />
              </g>
              <defs>
                <clipPath id="clip0_403_3276">
                  <rect width="24" height="24" fill="white" />
                </clipPath>
              </defs>
            </svg>
          </div>
          <div className={`text-xs ${isMatch(RoutePath.My) ? 'text-blue-600' : ''}`}>
            My
          </div>
        </div>
      </div>
    </div>
  );
};

export default NavBar;
